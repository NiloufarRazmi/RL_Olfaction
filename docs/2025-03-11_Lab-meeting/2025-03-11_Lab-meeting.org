#+TITLE: Lab meeting
#+SUBTITLE: /Robust representations for olfactory-spatial association learning/
#+author: Andrea Pierr√©
#+date: March 11, 2025
* HEADER :noexport:
#+SETUPFILE: ./style.org

* Project recap
** The LEC is key to sensory associations and spatial memory
*** Text :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.45
:END:
#+begin_export latex
\footnotesize
#+end_export
- *Piriform Cortex* encodes olfactory information
- *Hippocampus* encodes spatial information
- *Lateral Entorhinal Cortex (LEC)* encodes both olfactory & spatial information
*** Image :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.55
:END:
#+ATTR_LaTeX: :width \textwidth
[[file:medias/brain.png]]

#+begin_export latex
\begin{textblock}{5}(0.5,14.5)%
\tiny
Poo et al., 2022\\
Bitzenhofer et al., 2022\\
Lee et al., 2021
\end{textblock}
#+end_export

** Half triangle task for olfactory-spatial association learning
*** Left
:PROPERTIES:
:BEAMER_col: 0.33
:BEAMER_opt: [c]
:END:
#+begin_export latex
\begin{center}
\movie{\includegraphics[width=\linewidth, keepaspectratio, trim={0cm 0cm 28cm 0cm}, clip]{medias/video-picture.png}}{medias/annotatedF03_d35_2022-11-15_15.41.mp4}
\end{center}
#+end_export
*** Center
:PROPERTIES:
:BEAMER_col: 0.33
:BEAMER_opt: [c]
:END:
#+begin_export latex
\begin{center}
East/West task
\includegraphics[width=0.9\linewidth, keepaspectratio, trim={11cm 18cm 40cm 13cm}, clip]{medias/task-east-west.png}
\end{center}
#+end_export
*** Right
:PROPERTIES:
:BEAMER_col: 0.33
:BEAMER_opt: [c]
:END:
#+begin_export latex
\begin{center}
Left/Right task
\includegraphics[width=0.9\linewidth, keepaspectratio, trim={3cm 2cm 4cm 4cm}, clip]{medias/task-left-right.jpeg}
\end{center}
#+end_export

** Deep Reinforcement Learning model
#+ATTR_LaTeX: :height 0.95\textheight
[[file:medias/nn.drawio.png]]
** The environment
#+ATTR_LaTeX: :height 0.6\textheight
[[file:medias/RL_env-cartesian-polar.drawio.png]]
#+begin_export latex
\footnotesize
\vspace{-1em}
#+end_export
- 3 actions: $\Leftarrow \quad \Uparrow \quad \Rightarrow$
- Duplicated coordinates inputs:
  - Cartesian coordinates from north & south port
  - Polar coordinates from north & south port
** Questions & Hypothesis
#+begin_export latex
\metroset{block=fill}
\begin{exampleblock}{Questions}
\begin{itemize}
\item What \alert{function} does the network learn?
\item How the constrains of the task affect learning \& the representations learned?
%\item How this task structure might employ different representations of the action space?
\item How do the representations learned compare between the \emph{in vivo} and the \emph{in silico} neurons?
\end{itemize}
\end{exampleblock}
\pause
\begin{exampleblock}{Hypothesis}
\begin{itemize}
\item The network will use the most efficient coordinate information based on the task
\item The structure of the network's weights will reflect this prioritization of information
\end{itemize}
\end{exampleblock}
#+end_export

** Looking back$\dots$
:PROPERTIES:
:BEAMER_act: [<+->]
:END:
#+begin_export latex
\footnotesize
#+end_export
#+ATTR_LaTeX: :height 0.45\textheight
[[file:medias/mdp.png]]
1. First step trying to define Olivia's experiment as a Markov Decision Process (MDP) in Julia
2. 2D tiles with tabular RL & function approximation in Python/NumPy
2. 2D coordinate system in Python/PyTorch
3. Duplicated coordinates experiment in Python/PyTorch

* Modeling & Simulation
** State space & network architecture
#+ATTR_LaTeX: :height 0.97\textheight
[[file:medias/state-space-nn.png]]
** Training
East/West
#+ATTR_LaTeX: :height 0.35\textheight
[[file:medias/steps-and-rewards-EastWest.png]]
Left/Right
#+ATTR_LaTeX: :height 0.35\textheight
[[file:medias/steps-and-rewards-LeftRight.png]]
** Training checks -- East/West
#+ATTR_LaTeX: :width \textwidth
[[file:medias/steps-and-rewards-distrib-EastWest.png]]
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: [c]
:END:
#+ATTR_LaTeX: :width 0.8\textwidth
[[file:medias/loss-EastWest.png]]
*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: [c]
:END:
#+ATTR_LaTeX: :width 0.65\textwidth
[[file:medias/actions-distribution-EastWest.png]]
** Training checks -- Left/Right
#+ATTR_LaTeX: :width \textwidth
[[file:medias/steps-and-rewards-distrib-LeftRight.png]]
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: [c]
:END:
#+ATTR_LaTeX: :width 0.8\textwidth
[[file:medias/loss-LeftRight.png]]
*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: [c]
:END:
#+ATTR_LaTeX: :width 0.65\textwidth
[[file:medias/actions-distribution-LeftRight.png]]
** Agent behavior
*** Left
:PROPERTIES:
:BEAMER_col: 0.3
:BEAMER_opt: [c]
:END:
#+ATTR_LaTeX: :height 0.28\textheight
[[file:medias/trajectory-0-0-LeftRight.png]]
#+ATTR_LaTeX: :height 0.28\textheight
[[file:medias/trajectory-0-120-LeftRight.png]]
#+ATTR_LaTeX: :height 0.28\textheight
[[file:medias/trajectory-0-350-LeftRight.png]]
*** Right
:PROPERTIES:
:BEAMER_col: 0.3
:BEAMER_opt: [c]
:END:
#+ATTR_LaTeX: :height 0.28\textheight
[[file:medias/trajectory-0-0-EastWest.png]]
#+ATTR_LaTeX: :height 0.28\textheight
[[file:medias/trajectory-0-120-EastWest.png]]
#+ATTR_LaTeX: :height 0.28\textheight
[[file:medias/trajectory-0-350-EastWest.png]]
* What does the network learn?
** Weights structure -- East/West
#+ATTR_LaTeX: :height 0.96\textheight
[[file:medias/weights-matrices-EastWest.png]]
** Weights structure -- Left/Right
#+ATTR_LaTeX: :height 0.96\textheight
[[file:medias/weights-matrices-LeftRight.png]]
** Weights clustering
#+begin_export latex
\begin{center}
East/West
\end{center}
#+end_export
[[file:medias/weights-tSNE-EastWest.png]]
#+begin_export latex
\begin{center}
Left/Right
\end{center}
#+end_export
[[file:medias/weights-tSNE-LeftRight.png]]
** Activations learned -- East/West
#+ATTR_LaTeX: :height 0.9\textheight
[[file:medias/activations-learned-EastWest.png]]
** Activations learned -- Left/Right
#+ATTR_LaTeX: :height 0.9\textheight
[[file:medias/activations-learned-LeftRight.png]]
** Use the behavior as proxy -- Perturbation experiment
:PROPERTIES:
:BEAMER_act: [<+->]
:END:
- Perturb the Cartesian/polar part of the input on a trained agent and look at how the agent behaves
- Expectation:
  - Left/right task:
    - With the *Cartesian* inputs perturbed \to agent's performance unchanged
    - With the *polar* inputs perturbed \to agent's performance degrades
  - East/west task:
    - With the *polar* inputs perturbed \to agent's performance unchanged
    - With the *Cartesian* inputs perturbed \to agent's performance degrades
** Cartesian inputs unchanged -- polar inputs perturbed
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: [c]
:END:
#+begin_export latex
\begin{center}
\small
\textbf{East/West}\\
\footnotesize
Silencing inputs
\end{center}
#+end_export
#+ATTR_LaTeX: :width \textwidth
[[file:medias/steps-and-rewards-EastWest-perturb-silence.png]]
#+begin_export latex
\begin{center}
\footnotesize
Randomizing inputs
\end{center}
#+end_export
#+ATTR_LaTeX: :width \textwidth
[[file:medias/steps-and-rewards-EastWest-perturb-rand.png]]
*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: [c]
:END:
#+begin_export latex
\begin{center}
\small
\textbf{Left/Right}\\
\footnotesize
Silencing inputs
\end{center}
#+end_export
#+ATTR_LaTeX: :width \textwidth
[[file:medias/steps-and-rewards-LeftRight-perturb-silence.png]]
#+begin_export latex
\begin{center}
\footnotesize
Randomizing inputs
\end{center}
#+end_export
#+ATTR_LaTeX: :width \textwidth
[[file:medias/steps-and-rewards-LeftRight-perturb-rand.png]]
** Polar inputs unchanged -- Cartesian inputs perturbed
- Simulation does not end

  \to couldn't figure out why yet$\dots$
* Conclusion
** Partial conclusions so far
:PROPERTIES:
:BEAMER_act: [<+->]
:END:
- $\varnothing$ pattern on the weights
- The *pre-odor activations* cluster together, but no other clear pattern seems to emerge
- So far with this task setup, it seems *both types of coordinates information are required* to solve the task
** Next steps
:PROPERTIES:
:BEAMER_act: [<+->]
:END:
- Perturbation experiment:
  - Fix issue on Cartesian inputs
  - Setup more metrics for the study: performance histogram, % correct, etc.
- Need for some causal inference framework?
- Use of techniques from explainable AI?
- Study of the derivative of the output w.r.t. the inputs?
- *Timeline:* wrap the project by end of August

** COMMENT Neural representations?
[[file:~/Projects/DRL-olfaction/docs/expected cart-polar activations on both tasks.png]]
- Need for some causal framework?
** \nbsp{}
:PROPERTIES:
:BEAMER_opt: standout
:END:
Questions ?
* COMMENT Add plain option to Beamer TOC
% Local variables:
% org-beamer-outline-frame-options: "plain"
% End:

* Feedback :noexport:

** Need for some causal framework?
- [[https://doi.org/10.1038/s42256-020-0218-x]]
- [[https://doi.org/10.31235/osf.io/aeszf]]
- [[https://github.com/kochbj/Deep-Learning-for-Causal-Inference]]

** TODO Metrics for ablation study
*** Performance histogram
*** Percent correct
*** Shift in behavior
*** Number of steps
** Conflicting information
*** 1 set of coord is right, the other is wrong
*** See if the agent follow one or the other
** Cosine input or x node
*** What's the distrib coming on the sine
*** Multidim problem
*** Look for sensitivity coming in the first layer
** Derive of any input wrt input
*** Avg over playback of the agent
*** How sensitive is the agent for this task
** XAI
*** Deepdream
**** What input maximally drive a particular node
** Try to understand the weights more than the activations
*** Weights are the structure of the network
*** Cluster the weights of the network?
** Clustering
*** Cluster by action space
*** Cluster if moved the agent closer to goal or not
**** Break by task phases
**** before cue after cue
*** Target: E/W or L/R
**** Supervised clustering
**** Across all the layers
*** Other type of clustering?
**** Not hierarchical clustering
**** Fix some condition
** TODO Hot encode cue neuron
** State occupancy
** TODO Reorganize the weights matrices
*** Clustering of the first layer of weights
*** TODO Sort the rows
*** TODO Sort last weight matrix with actions
** TODO t-SNE
*** TODO color
*** TODO transpose matrix
*** Plot evolution during training
** Try other clustering methods
*** MDS
*** PCA
*** Graph clustering?
** Correlation only on a certain type of coords?
** Activations
*** Difference in activation if agent is close to wall?
*** Diff if agent is a port
*** Weight by the likelihoood a state will occur
** Congunctive cells?
** Pass Random
** Correlation of input \to where it is initialized?
** Add some learning and see how the agent recovers
** Compare raw/step with normal agent
** TODO Perturbation
*** TODO 15 deg rotation
*** Inject the expected mean
*** Instead of randomize, just add some noise
*** Check sensitivity of the input
**** Translate a little bit the input until it doesn't work anymore
** NO Network too big?
** Sample all the states the agent have seen
** Add some regularization during training?
** regularization \to Dropout??
*** L1/L2 regu
*** Dropout
** Try to understand the principle under the system
